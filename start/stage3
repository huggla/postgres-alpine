# Passed from stage2:
# ---------------------------------------------------------
# set -e +a +m +s +i -f
# . /start/stage2.functions
# firstrun
# IFS_bak
# VAR_*
# ---------------------------------------------------------

if [ "$firstrun" == "true" ]
then
   IFS=$(echo -en "\n\b,")
   if [ ! -s "$VAR_CONFIG_FILE" ]
   then
      configFromVarGroup param > "$VAR_CONFIG_FILE"
   fi
   if [ ! -s "$(removeSingleQuotes "$VAR_param_hba_file")" ]
   then
      for row in $VAR_HBA
      do
         trim "$row" >> "VAR_$param_hba_file"
      done
   fi
   IFS=$IFS_bak
   dataDir="$(removeSingleQuotes "$VAR_param_data_directory")"
   /bin/chown -R $VAR_LINUX_USER "$dataDir"
   /bin/chmod -R 0700 "$dataDir"
   for socketDir in $(removeSingleQuotes "$VAR_param_unix_socket_directories")
   do
      /bin/chmod g+rw "$socketdir"
   done
   if [ ! -s "$param_data_directory/PG_VERSION" ]
   then
      readonly pwfile="$(makepwfileforuser postgres)"
      readonly LOCALE="$(var - LOCALE)"
      readonly ENCODING="$(var - ENCODING)"
      readonly TEXT_SEARCH_CONFIG="$(var - TEXT_SEARCH_CONFIG)"
      echo 'Defaults env_keep = "TZ"' >> "/etc/sudoers.d/docker2"
      /bin/chmod go=rx /bin
      /usr/bin/env -i $sudo_cmd -u $LINUX_USER TZ="$(var param timezone | /usr/bin/tr -d "'")" $BIN_DIR/initdb --pgdata="$param_data_directory" --locale="$LOCALE" --encoding="$ENCODING" --text-search-config="$TEXT_SEARCH_CONFIG" --username=postgres --pwfile="$pwfile"
      trydelete "$pwfile"
      trydelete "$param_data_directory/postgresql.conf"
      trydelete "$param_data_directory/pg_hba.conf"
      trydelete "$param_data_directory/pg_ident.conf"
      # internal start of server in order to allow set-up using psql-client
      # does not listen on external TCP/IP and waits until start finishes
      /usr/bin/env -i $sudo_cmd -u $LINUX_USER $BIN_DIR/pg_ctl --pgdata="$CONFIG_DIR" --options="-c listen_addresses='localhost'" --wait start
      echo
      readonly psql_cmd="/usr/bin/env -i $sudo_cmd -u $LINUX_USER $BIN_DIR/psql --variable=ON_ERROR_STOP=1 --username postgres"
      set +f
      set -- "$CONFIG_DIR/initdb/"*
      while [ -f "$1" ]
      do
         filename="$(/usr/bin/basename "$1")"
         dbname="$(echo "$filename" | /usr/bin/awk -F '.' '{print $2}')"
         case "$1" in
            *.sh)     echo "Running $1"
                      . "$1"
                      ;;
            *.sql)    echo "Running $1"
                      $psql_cmd --dbname="$dbname" --file="$1"
                      echo
                      ;;
            *.sql.gz) echo "Running $1"
                      /bin/gunzip -c "$1" | $psql_cmd --dbname="$dbname";
                      echo
                      ;;
            *)        echo "Ignoring $1"
                      ;;
         esac
         rm -f "$1"
         set -- "$CONFIG_DIR/initdb/"*
      done
      set -f
      /usr/bin/env -i $sudo_cmd -u $LINUX_USER $BIN_DIR/pg_ctl --pgdata="$CONFIG_DIR" --mode=fast --wait stop
      /bin/chmod go= /bin
      echo
      echo 'PostgreSQL init process complete; ready for start up.'
      echo
   fi
   /bin/rm -rf "$CONFIG_DIR/initdb"
fi
if [ -n "$(var - password_postgres)" ]
then
   echo '*******************************************************************************'
   echo '* Container was started with environment variable REV_password_postgres set.  *'
   echo '* This variable is only needed when a new database is initialized. To improve *'
   echo '* security, restart the container without it.                                 *'
   echo '*******************************************************************************'
   echo
fi
if [ -f "$BIN_DIR/start.stage4" ]
then
   . "$BIN_DIR/start.stage4"
fi
exec /usr/bin/env -i $sudo_cmd -u $LINUX_USER $BIN_DIR/postgres --config_file="$CONFIG_FILE"
