# Passed from stage2:
# ---------------------------------------------------------
# set -e +a +m +s +i -f
# . /start/stage2.functions
# firstrun
# IFS_bak
# VAR_*
# ---------------------------------------------------------

if [ "$firstrun" == "true" ]
then
   IFS=$(echo -en "\n\b,")
   if [ ! -s "$VAR_CONFIG_FILE" ]
   then
      configFromVarGroup param > "$VAR_CONFIG_FILE"
   fi
   if [ ! -s "$(removeSingleQuotes "$VAR_param_hba_file")" ]
   then
      for row in $VAR_HBA
      do
         trim "$row" >> "VAR_$param_hba_file"
      done
   fi
   IFS=$IFS_bak
   dataDir="$(removeSingleQuotes "$VAR_param_data_directory")"
   if [ ! -s "$dataDir/PG_VERSION" ]
   then
#      /bin/chown -R $VAR_LINUX_USER "$dataDir"
#      /bin/chmod -R 0700 "$dataDir"
      readonly pwFile="$(makePwFileForUser $VAR_LINUX_USER)"
#      echo 'Defaults env_keep = "TZ"' >> "/etc/sudoers.d/docker2"
      /bin/chown :$VAR_LINUX_USER /bin
      /bin/chmod g=rx /bin
      runCommandAsLinuxUser "TZ=$(removeSingleQuotes "$VAR_param_timezone") /usr/local/bin/initdb --pgdata=\"$dataDir\" --locale=$VAR_LOCALE --encoding=$VAR_ENCODING --text-search-config=$VAR_TEXT_SEARCH_CONFIG --username=$VAR_LINUX_USER --pwfile=\"$pwFile\""
      tryDelete "$pwFile"
      tryDelete "$dataDir/postgresql.conf"
      tryDelete "$dataDir/pg_hba.conf"
      tryDelete "$dataDir/pg_ident.conf"
      # internal start of server in order to allow set-up using psql-client
      # does not listen on external TCP/IP and waits until start finishes

      a="/usr/bin/env -i"
      b="/usr/local/bin/sudo -u $VAR_LINUX_USER"
      c="/usr/local/bin/pg_ctl "
      d='--pgdata="'
      e='" --options="-c listen_addresses='
      f="'localhost'"
      g='" --wait start'
      com="$c$d$VAR_CONFIG_DIR$e$f$g"
runCommandAsLinuxUser "$com"
      echo
      readonly psql_cmd="/usr/local/bin/psql --variable=ON_ERROR_STOP=1 --username $VAR_LINUX_USER"
      set +f
      set -- "$VAR_INIT_DIR/initdb/"*
      while [ -f "$1" ]
      do
         filename="$(/usr/bin/basename "$1")"
         dbname=${filename%.*}
       #  "$(echo "$filename" | /usr/bin/awk -F '.' '{print $2}')"
         case "$1" in
            *.sh)     echo "Running $1"
                      . "$1"
                      ;;
            *.sql)    echo "Running $1"
                      runCommandAsLinuxUser "$psql_cmd --dbname=$dbname --file=\"$1\""
                      echo
                      ;;
            *.sql.gz) echo "Running $1"
                      runCommandAsLinuxUser "/bin/gunzip -c \"$1\" | $psql_cmd --dbname=$dbname"
                      echo
                      ;;
            *)        echo "Ignoring $1"
                      ;;
         esac
         /bin/rm -f "$1"
         set -- "$VAR_INIT_DIR/initdb/"*
      done
      set -f
      runCommandAsLinuxUser "/usr/local/bin/pg_ctl --pgdata=\"$VAR_CONFIG_DIR\" --mode=fast --wait stop"
      /bin/chmod go= /bin
      echo
      echo 'PostgreSQL init process complete; ready for start up.'
      echo
   fi
   /bin/rm -rf "$VAR_INIT_DIR/initdb"
fi
if [ -n "$VAR_password_postgres" ]
then
   echo '*******************************************************************************'
   echo '* Container was started with environment variable REV_password_postgres set.  *'
   echo '* This variable is only needed when a new database is initialized. To improve *'
   echo '* security, restart the container without it.                                 *'
   echo '*******************************************************************************'
   echo
fi
