# Set in stage2/3:
# -------------------------------------------
# set -e +a +m +s +i -f
# . /start/stage2.functions
# VAR_*
# dataDir

writeHbaFile(){
   for row in $VAR_HBA
   do
      trim "$row" >> "$hbaFile"
   done
}

initPostgres(){
   local pwFile="$(makePwFileForUser $VAR_LINUX_USER)"
   local pw=""
   /bin/chown $VAR_LINUX_USER "$pwFile"
   local -
   set +e
   runBinCmdAsLinuxUser "TZ=$(removeSingleQuotes "$VAR_param_timezone") /usr/local/bin/initdb --pgdata=\"$dataDir\" --locale=$VAR_LOCALE --encoding=$VAR_ENCODING --text-search-config=$VAR_TEXT_SEARCH_CONFIG --username=$VAR_LINUX_USER --pwfile=\"$pwFile\""
   local exitCode=$?
   set -e
   /bin/chown root "$pwFile"
   if [ "$exitCode" != "0" ]
   then
      tryDelete "$pwFile"
      return $exitCode
   else
      tryDelete "$dataDir/postgresql.conf"
      tryDelete "$dataDir/pg_hba.conf"
      tryDelete "$dataDir/pg_ident.conf"
      runBinCmdAsLinuxUser "/usr/local/bin/pg_ctl --pgdata=\"$VAR_CONFIG_DIR\" --options=\"-c listen_addresses='localhost'\" --wait start"
      echo
      processInitdbDir
      runBinCmdAsLinuxUser "/usr/local/bin/pg_ctl --pgdata=\"$VAR_CONFIG_DIR\" --mode=fast --wait stop"
      echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
      echo "! A new PostgreSQL data storage has been initialized with $VAR_LINUX_USER as owner. !"
      echo "! NOTE PASSWORD BELOW. Write it down and store in a safe place.              !" 
      read pw < "$pwFile"
      tryDelete "$pwFile"
      echo "! $pw                                                                        !"
      echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
   fi
}

processInitdbDir(){
   local psql_cmd="/usr/local/bin/psql --variable=ON_ERROR_STOP=1 --username $VAR_LINUX_USER"
   local filename=""
   local dbname=""
   local -
   set +f
   set -- "/initdb/"*
   while [ -f "$1" ]
   do
      filename="$(/usr/bin/basename "$1")"
      dbname=${filename%.*}
      dbname=${dbname#*.}
      case "$1" in
         *.sh)     echo "Running $1"
                   . "$1"
                   ;;
         *.sql)    echo "Running $1"
                   runCmd "$psql_cmd --dbname=$dbname --file=\"$1\""
                   echo
                   ;;
         *.sql.gz) echo "Running $1"
                   runCmd "/bin/gunzip -c \"$1\" | $psql_cmd --dbname=$dbname"
                   echo
                   ;;
         *)        echo "Ignoring $1"
                   ;;
      esac
      /bin/rm -f "$1"
      set -- "/initdb/"*
   done
   set -f
}

printPasswordWarning(){
   echo '*******************************************************************************'
   echo "* Container was started with environment variable VAR_password_$VAR_LINUX_USER set.  *"
   echo '* This variable is only needed when a new database is initialized. To improve *'
   echo '* security, restart the container without it.                                 *'
   echo '*******************************************************************************'
   echo
}
